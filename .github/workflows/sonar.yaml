name: SonarCloud

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Build Wrapper
        uses: SonarSource/sonarqube-scan-action/install-build-wrapper@v5

      - name: Build with coverage (wrapped)
        run: |
          make clean
          build-wrapper-linux-x86-64 --out-dir $BUILD_WRAPPER_OUT_DIR make coverage-build

      - name: Run tests to generate .gcda files
        run: |
          make test
          make integration-test

      - name: Collect coverage into one XML report
        run: |
          pip install gcovr
          gcovr --sonarqube > coverage.xml

      - name: SonarCloud scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            --define sonar.cfamily.compile-commands="${{ env.BUILD_WRAPPER_OUT_DIR }}/compile_commands.json"
            --define sonar.coverageReportPaths=coverage.xml
