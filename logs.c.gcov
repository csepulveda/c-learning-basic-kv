        -:    0:Source:src/logs.c
        -:    0:Graph:bin/test_logs-logs.gcno
        -:    0:Data:bin/test_logs-logs.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "logs.h"
        -:    2:#include <stdlib.h>
        -:    3:
        -:    4:LogLevel CURRENT_LOG_LEVEL = LOG_LEVEL_DEBUG;
        -:    5:
        4:    6:const char *level_to_string(LogLevel level) {
        4:    7:	switch (level) {
        1:    8:		case LOG_LEVEL_DEBUG: return "DEBUG";
        2:    9:		case LOG_LEVEL_INFO:  return "INFO";
        1:   10:		case LOG_LEVEL_ERROR: return "ERROR";
    #####:   11:		default:              return "UNKNOWN";
        -:   12:	}
        4:   13:}
        -:   14:
        4:   15:const char *level_to_color(LogLevel level) {
        4:   16:	switch (level) {
        1:   17:		case LOG_LEVEL_DEBUG: return "\033[36m"; // Cyan
        2:   18:		case LOG_LEVEL_INFO:  return "\033[32m"; // Green
        1:   19:		case LOG_LEVEL_ERROR: return "\033[31m"; // Red
    #####:   20:		default:              return "\033[0m";  // Reset
        -:   21:	}
        4:   22:}
        -:   23:
        3:   24:void log_message_str(LogLevel level, const char *file, int line, const char *message) {
        3:   25:	if (level < CURRENT_LOG_LEVEL) return;
        -:   26:
        3:   27:	time_t t = time(NULL);
        -:   28:	struct tm lt_data;
        3:   29:	localtime_r(&t, &lt_data);
        -:   30:
        -:   31:	char timebuf[20];
        3:   32:	strftime(timebuf, sizeof(timebuf), "%Y-%m-%d %H:%M:%S", &lt_data);
        -:   33:
        6:   34:	fprintf(stderr, "%s %s[%s] %s:%d: %s\033[0m\n",
        3:   35:	        timebuf,
        3:   36:	        level_to_color(level),
        3:   37:	        level_to_string(level),
        3:   38:	        file,
        3:   39:	        line,
        3:   40:	        message);
        3:   41:}
        -:   42:
        1:   43:void log_message_va(LogLevel level, const char *file, int line, const char *fmt, va_list args) {
        1:   44:	if (level < CURRENT_LOG_LEVEL) return;
        -:   45:
        1:   46:	time_t t = time(NULL);
        -:   47:	struct tm lt_data;
        1:   48:	localtime_r(&t, &lt_data);
        -:   49:
        -:   50:	char timebuf[20];
        1:   51:	strftime(timebuf, sizeof(timebuf), "%Y-%m-%d %H:%M:%S", &lt_data);
        -:   52:
        1:   53:	fprintf(stderr, "%s %s[%s] %s:%d: ", timebuf, level_to_color(level), level_to_string(level), file, line);
        1:   54:	vfprintf(stderr, fmt, args);
        1:   55:	fprintf(stderr, "\033[0m\n");
        1:   56:}
